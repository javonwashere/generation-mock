(window["__LOADABLE_LOADED_CHUNKS__"] = window["__LOADABLE_LOADED_CHUNKS__"] || []).push([["list"],{

/***/ "./packages/f1/src/components/list/list-item.js":
/*!******************************************************!*\
  !*** ./packages/f1/src/components/list/list-item.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _featured_media__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../featured-media */ \"./packages/f1/src/components/featured-media.js\");\n/* harmony import */ var _frontity_components_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/image */ \"./node_modules/@frontity/components/image.tsx\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Item Component\n *\n * It renders the preview of a blog post. Each blog post contains\n * - Title: clickable title of the post\n * - Author: name of author and published date\n * - FeaturedMedia: the featured image/video of the post\n */var Item=(_ref)=>{var{state,item}=_ref;var data=state.source.get(state.router.link);var author=state.source.author[item.author];var date=new Date(item.date);var isJobs=data.isAwsmJobOpeningsArchive;var readMoreLabel='Read more';if(isJobs){readMoreLabel='More Details';}return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,!isJobs&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Article,null,state.theme.featured.showOnList&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_featured_media__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{id:item.featured_media}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{className:\"bio-info\"},author&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(StyledLink,{link:author.link},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_image__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{src:author.avatar_urls['48'],alt:author.name}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(AuthorName,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"b\",null,author.name))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(PublishDate,null,\" \",date.toDateString())),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"article-title\",link:item.link},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Title,{dangerouslySetInnerHTML:{__html:item.title.rendered}})),item.excerpt&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Excerpt,{dangerouslySetInnerHTML:{__html:item.excerpt.rendered}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"redmore-btn\",link:item.link},readMoreLabel,\"...\")),isJobs&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Article,{className:\"job-article col-12 col-md-6 col-lg-4 align-self-strech\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{className:\"job-box\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"job-title\",link:item.link},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"h4\",{dangerouslySetInnerHTML:{__html:item.title.rendered}})),item.excerpt&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Excerpt,{dangerouslySetInnerHTML:{__html:item.excerpt.rendered}}),isJobs&&item.awsm_in_specs&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:item.awsm_in_specs}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{className:\"brand-btnhollow\",link:item.link},readMoreLabel,\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"svg\",{width:\"14px\",height:\"9px\",viewBox:\"0 0 14 9\",version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"g\",{id:\"Symbols\",stroke:\"none\",strokeWidth:\"1\",fillRule:\"evenodd\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"g\",{id:\"Icons/Right-arrow\",transform:\"translate(0.000000, -2.000000)\",fillRule:\"nonzero\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"g\",{id:\"interface\",transform:\"translate(0.000000, 2.000000)\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"path\",{d:\"M13.7823071,3.98623766 L9.90356292,0.21135247 C9.61303376,-0.0713855917 9.14311798,-0.0703331717 8.85392477,0.213820214 C8.56476866,0.497937309 8.56588194,0.957481922 8.85641109,1.24025627 L11.460152,3.77419318 L0.742187132,3.77419318 C0.332277179,3.77419318 -3.09974268e-13,4.09913691 -3.09974268e-13,4.5 C-3.09974268e-13,4.90086317 0.332277179,5.2258069 0.742187132,5.2258069 L11.4601149,5.2258069 L8.8564482,7.75974381 C8.56591905,8.04251816 8.56480577,8.50206277 8.85396188,8.78617987 C9.14315509,9.07036955 9.61310798,9.07134938 9.90360003,8.78864761 L13.7816762,5.01445194 C14.0730218,4.73004453 14.0720941,4.26901201 13.7823071,3.98623766 Z\",id:\"Path\"})))))))));};// Connect the Item to gain access to `state` as a prop\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Item));var Article=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"article\",{target:\"e18hzt7j0\",label:\"Article\"})( false?undefined:{name:\"1qf6jf1\",styles:\"max-width:771px;margin:0 auto;position:relative;margin-bottom:3.5rem;.bio-info{margin-bottom:1rem;img{border-radius:50%;margin-right:0.5rem;}}.article-title{&:hover{h1{color:var(--brand);}}}.redmore-btn{color:var(--brand);transition:all .3s ease;&:hover{color:var(--black);}}&.job-article{max-width:100%;margin:0;margin-bottom:2rem;display:flex;flex-direction:column;.job-box{padding:2rem;background:var(--white);box-shadow:0px 2px 16px -9px rgba(0,0,0,0.5);border:1px solid #ececec;border-radius:5px;transition:all .3s ease;display:flex;flex-grow:1;flex-direction:column;.job-title{text-decoration:none;h4{transition:all .3s ease;}&:hover{h4{color:var(--brand);}}}.brand-btnhollow{margin:auto auto 0 0;color:var(--brand);transition:all .3s ease;svg{fill:var(--black);transition:all .3s ease;}&:hover{color:var(--black);svg{fill:var(--brand);}}}.awsm-job-specification-wrapper{margin-bottom:0.5rem;.awsm-job-specification-job-category{.awsm-job-specification-term{&:before{content:'';background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24'%3E%3Cpath d='M12.23 15.5c-6.801 0-10.367-1.221-12.23-2.597v9.097h24v-8.949c-3.218 2.221-9.422 2.449-11.77 2.449zm1.77 2.532c0 1.087-.896 1.968-2 1.968s-2-.881-2-1.968v-1.032h4v1.032zm-14-8.541v-2.491h24v2.605c0 5.289-24 5.133-24-.114zm9-7.491c-1.104 0-2 .896-2 2v2h2v-1.5c0-.276.224-.5.5-.5h5c.276 0 .5.224.5.5v1.5h2v-2c0-1.104-.896-2-2-2h-6z'/%3E%3C/svg%3E\\\");width:14px;height:14px;position:relative;display:inline-block;margin-right:0.5rem;}}margin-bottom:0.2rem;}.awsm-job-specification-job-location{.awsm-job-specification-term{&:before{content:'';background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24'%3E%3Cpath d='M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 14c-3.314 0-6-2.686-6-6s2.686-6 6-6 6 2.686 6 6-2.686 6-6 6z'/%3E%3C/svg%3E\\\");width:14px;height:14px;position:relative;display:inline-block;margin-right:0.5rem;}}}}&:hover{box-shadow:0 5px 20px 0 rgba(0,0,0,.23);}}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXZvbm1jZ2lsYmVycnkvRG9jdW1lbnRzL2dlbi1tb2NrLXYyL2dlbmVyYXRpb24tbW9jay9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L2xpc3QtaXRlbS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRjhCIiwiZmlsZSI6Ii9Vc2Vycy9qYXZvbm1jZ2lsYmVycnkvRG9jdW1lbnRzL2dlbi1tb2NrLXYyL2dlbmVyYXRpb24tbW9jay9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L2xpc3QtaXRlbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2xpbmtcIjtcbmltcG9ydCBGZWF0dXJlZE1lZGlhIGZyb20gXCIuLi9mZWF0dXJlZC1tZWRpYVwiO1xuaW1wb3J0IEltYWdlIGZyb20gXCJAZnJvbnRpdHkvY29tcG9uZW50cy9pbWFnZVwiO1xuLyoqXG4gKiBJdGVtIENvbXBvbmVudFxuICpcbiAqIEl0IHJlbmRlcnMgdGhlIHByZXZpZXcgb2YgYSBibG9nIHBvc3QuIEVhY2ggYmxvZyBwb3N0IGNvbnRhaW5zXG4gKiAtIFRpdGxlOiBjbGlja2FibGUgdGl0bGUgb2YgdGhlIHBvc3RcbiAqIC0gQXV0aG9yOiBuYW1lIG9mIGF1dGhvciBhbmQgcHVibGlzaGVkIGRhdGVcbiAqIC0gRmVhdHVyZWRNZWRpYTogdGhlIGZlYXR1cmVkIGltYWdlL3ZpZGVvIG9mIHRoZSBwb3N0XG4gKi9cbmNvbnN0IEl0ZW0gPSAoeyBzdGF0ZSwgaXRlbSB9KSA9PiB7XG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgY29uc3QgYXV0aG9yID0gc3RhdGUuc291cmNlLmF1dGhvcltpdGVtLmF1dGhvcl07XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShpdGVtLmRhdGUpO1xuICBjb25zdCBpc0pvYnMgPSBkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZTtcblxuICBsZXQgcmVhZE1vcmVMYWJlbCA9ICdSZWFkIG1vcmUnO1xuICBpZiAoIGlzSm9icyApIHtcbiAgICByZWFkTW9yZUxhYmVsID0gJ01vcmUgRGV0YWlscyc7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7IWlzSm9icyAmJiAoXG4gICAgICAgIDxBcnRpY2xlPlxuICAgICAgICB7c3RhdGUudGhlbWUuZmVhdHVyZWQuc2hvd09uTGlzdCAmJiAoXG4gICAgICAgICAgPEZlYXR1cmVkTWVkaWEgaWQ9e2l0ZW0uZmVhdHVyZWRfbWVkaWF9IC8+XG4gICAgICAgICl9XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiaW8taW5mb1wiPlxuICAgICAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgYW4gYXV0aG9yLCB3ZSByZW5kZXIgYSBjbGlja2FibGUgYXV0aG9yIHRleHQuICovfVxuICAgICAgICAgIHthdXRob3IgJiYgKFxuICAgICAgICAgICAgPFN0eWxlZExpbmsgbGluaz17YXV0aG9yLmxpbmt9PlxuICAgICAgICAgICAgICA8SW1hZ2Ugc3JjPXthdXRob3IuYXZhdGFyX3VybHNbJzQ4J119IGFsdD17YXV0aG9yLm5hbWV9IC8+XG4gICAgICAgICAgICAgIDxBdXRob3JOYW1lPlxuICAgICAgICAgICAgICAgIDxiPnthdXRob3IubmFtZX08L2I+XG4gICAgICAgICAgICAgIDwvQXV0aG9yTmFtZT5cbiAgICAgICAgICAgIDwvU3R5bGVkTGluaz5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxQdWJsaXNoRGF0ZT5cbiAgICAgICAgICAgIHtcIiBcIn1cbiAgICAgICAgICAgIHtkYXRlLnRvRGF0ZVN0cmluZygpfVxuICAgICAgICAgIDwvUHVibGlzaERhdGU+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxMaW5rIGNsYXNzTmFtZT1cImFydGljbGUtdGl0bGVcIiBsaW5rPXtpdGVtLmxpbmt9PlxuICAgICAgICAgIDxUaXRsZSBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGl0ZW0udGl0bGUucmVuZGVyZWQgfX0gLz5cbiAgICAgICAgPC9MaW5rPlxuXG4gICAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgYW4gZXhjZXJwdCAoc2hvcnQgc3VtbWFyeSB0ZXh0KSwgd2UgcmVuZGVyIGl0ICovfVxuICAgICAgICB7aXRlbS5leGNlcnB0ICYmIChcbiAgICAgICAgICA8RXhjZXJwdCBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGl0ZW0uZXhjZXJwdC5yZW5kZXJlZCB9fSAvPlxuICAgICAgICApfVxuICAgICAgICA8TGluayBjbGFzc05hbWU9XCJyZWRtb3JlLWJ0blwiIGxpbms9e2l0ZW0ubGlua30+eyByZWFkTW9yZUxhYmVsIH0uLi48L0xpbms+XG4gICAgICAgIDwvQXJ0aWNsZT5cbiAgICAgICl9XG4gICAgICB7aXNKb2JzICYmIChcbiAgICAgICAgPEFydGljbGUgY2xhc3NOYW1lPVwiam9iLWFydGljbGUgY29sLTEyIGNvbC1tZC02IGNvbC1sZy00IGFsaWduLXNlbGYtc3RyZWNoXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiam9iLWJveFwiPlxuICAgICAgICAgICAgPExpbmsgY2xhc3NOYW1lPVwiam9iLXRpdGxlXCIgbGluaz17aXRlbS5saW5rfT5cbiAgICAgICAgICAgICAgPGg0IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogaXRlbS50aXRsZS5yZW5kZXJlZCB9fSAvPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyBhbiBleGNlcnB0IChzaG9ydCBzdW1tYXJ5IHRleHQpLCB3ZSByZW5kZXIgaXQgKi99XG4gICAgICAgICAgICB7aXRlbS5leGNlcnB0ICYmIChcbiAgICAgICAgICAgICAgPEV4Y2VycHQgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBpdGVtLmV4Y2VycHQucmVuZGVyZWQgfX0gLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICB7aXNKb2JzICYmIGl0ZW0uYXdzbV9pbl9zcGVjcyAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBpdGVtLmF3c21faW5fc3BlY3MgfX0+PC9kaXY+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICA8TGluayBjbGFzc05hbWU9XCJicmFuZC1idG5ob2xsb3dcIiBsaW5rPXtpdGVtLmxpbmt9PnsgcmVhZE1vcmVMYWJlbCB9IDxzdmcgd2lkdGg9XCIxNHB4XCIgaGVpZ2h0PVwiOXB4XCIgdmlld0JveD1cIjAgMCAxNCA5XCIgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48ZyBpZD1cIlN5bWJvbHNcIiBzdHJva2U9XCJub25lXCIgc3Ryb2tlV2lkdGg9XCIxXCIgZmlsbFJ1bGU9XCJldmVub2RkXCI+PGcgaWQ9XCJJY29ucy9SaWdodC1hcnJvd1wiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLjAwMDAwMCwgLTIuMDAwMDAwKVwiICBmaWxsUnVsZT1cIm5vbnplcm9cIj48ZyBpZD1cImludGVyZmFjZVwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLjAwMDAwMCwgMi4wMDAwMDApXCI+PHBhdGggZD1cIk0xMy43ODIzMDcxLDMuOTg2MjM3NjYgTDkuOTAzNTYyOTIsMC4yMTEzNTI0NyBDOS42MTMwMzM3NiwtMC4wNzEzODU1OTE3IDkuMTQzMTE3OTgsLTAuMDcwMzMzMTcxNyA4Ljg1MzkyNDc3LDAuMjEzODIwMjE0IEM4LjU2NDc2ODY2LDAuNDk3OTM3MzA5IDguNTY1ODgxOTQsMC45NTc0ODE5MjIgOC44NTY0MTEwOSwxLjI0MDI1NjI3IEwxMS40NjAxNTIsMy43NzQxOTMxOCBMMC43NDIxODcxMzIsMy43NzQxOTMxOCBDMC4zMzIyNzcxNzksMy43NzQxOTMxOCAtMy4wOTk3NDI2OGUtMTMsNC4wOTkxMzY5MSAtMy4wOTk3NDI2OGUtMTMsNC41IEMtMy4wOTk3NDI2OGUtMTMsNC45MDA4NjMxNyAwLjMzMjI3NzE3OSw1LjIyNTgwNjkgMC43NDIxODcxMzIsNS4yMjU4MDY5IEwxMS40NjAxMTQ5LDUuMjI1ODA2OSBMOC44NTY0NDgyLDcuNzU5NzQzODEgQzguNTY1OTE5MDUsOC4wNDI1MTgxNiA4LjU2NDgwNTc3LDguNTAyMDYyNzcgOC44NTM5NjE4OCw4Ljc4NjE3OTg3IEM5LjE0MzE1NTA5LDkuMDcwMzY5NTUgOS42MTMxMDc5OCw5LjA3MTM0OTM4IDkuOTAzNjAwMDMsOC43ODg2NDc2MSBMMTMuNzgxNjc2Miw1LjAxNDQ1MTk0IEMxNC4wNzMwMjE4LDQuNzMwMDQ0NTMgMTQuMDcyMDk0MSw0LjI2OTAxMjAxIDEzLjc4MjMwNzEsMy45ODYyMzc2NiBaXCIgaWQ9XCJQYXRoXCI+PC9wYXRoPjwvZz48L2c+PC9nPjwvc3ZnPjwvTGluaz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvQXJ0aWNsZT5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59O1xuXG4vLyBDb25uZWN0IHRoZSBJdGVtIHRvIGdhaW4gYWNjZXNzIHRvIGBzdGF0ZWAgYXMgYSBwcm9wXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEl0ZW0pO1xuY29uc3QgQXJ0aWNsZSA9IHN0eWxlZC5hcnRpY2xlYFxuICBtYXgtd2lkdGg6NzcxcHg7XG4gIG1hcmdpbjowIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTozLjVyZW07XG4gIC5iaW8taW5mbyB7XG4gICAgbWFyZ2luLWJvdHRvbToxcmVtO1xuICAgIGltZyB7XG4gICAgICBib3JkZXItcmFkaXVzOjUwJTtcbiAgICAgIG1hcmdpbi1yaWdodDowLjVyZW07XG4gICAgfVxuICB9XG4gIC5hcnRpY2xlLXRpdGxlIHsgICAgXG4gICAgJjpob3ZlciB7XG4gICAgICBoMSB7XG4gICAgICAgIGNvbG9yOnZhcigtLWJyYW5kKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnJlZG1vcmUtYnRuIHtcbiAgICBjb2xvcjp2YXIoLS1icmFuZCk7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6dmFyKC0tYmxhY2spO1xuICAgIH1cbiAgfVxuICAvKipKb2IgYXJ0aWNsZXMqKi9cbiAgJi5qb2ItYXJ0aWNsZSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAuam9iLWJveCB7XG4gICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgYmFja2dyb3VuZDogdmFyKC0td2hpdGUpO1xuICAgICAgYm94LXNoYWRvdzogMHB4IDJweCAxNnB4IC05cHggcmdiYSgwLDAsMCwwLjUpO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VjZWNlYztcbiAgICAgIGJvcmRlci1yYWRpdXM6NXB4O1xuICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZ3JvdzogMTsgICAgICBcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAuam9iLXRpdGxlIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gICAgICAgIGg0IHtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2U7XG4gICAgICAgIH0gICAgICAgIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBoNCB7XG4gICAgICAgICAgICBjb2xvcjp2YXIoLS1icmFuZCk7XG4gICAgICAgICAgfSAgICAgICAgICBcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLmJyYW5kLWJ0bmhvbGxvdyB7ICAgICAgICBcbiAgICAgICAgbWFyZ2luOiBhdXRvIGF1dG8gMCAwO1xuICAgICAgICBjb2xvcjp2YXIoLS1icmFuZCk7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOnZhcigtLWJsYWNrKTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2U7XG4gICAgICAgIH1cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgY29sb3I6dmFyKC0tYmxhY2spO1xuICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICBmaWxsOnZhcigtLWJyYW5kKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC5hd3NtLWpvYi1zcGVjaWZpY2F0aW9uLXdyYXBwZXIge1xuICAgICAgICBtYXJnaW4tYm90dG9tOjAuNXJlbTtcbiAgICAgICAgLmF3c20tam9iLXNwZWNpZmljYXRpb24tam9iLWNhdGVnb3J5IHtcbiAgICAgICAgICAuYXdzbS1qb2Itc3BlY2lmaWNhdGlvbi10ZXJte1xuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzE0JyBoZWlnaHQ9JzE0JyB2aWV3Qm94PScwIDAgMjQgMjQnJTNFJTNDcGF0aCBkPSdNMTIuMjMgMTUuNWMtNi44MDEgMC0xMC4zNjctMS4yMjEtMTIuMjMtMi41OTd2OS4wOTdoMjR2LTguOTQ5Yy0zLjIxOCAyLjIyMS05LjQyMiAyLjQ0OS0xMS43NyAyLjQ0OXptMS43NyAyLjUzMmMwIDEuMDg3LS44OTYgMS45NjgtMiAxLjk2OHMtMi0uODgxLTItMS45Njh2LTEuMDMyaDR2MS4wMzJ6bS0xNC04LjU0MXYtMi40OTFoMjR2Mi42MDVjMCA1LjI4OS0yNCA1LjEzMy0yNC0uMTE0em05LTcuNDkxYy0xLjEwNCAwLTIgLjg5Ni0yIDJ2Mmgydi0xLjVjMC0uMjc2LjIyNC0uNS41LS41aDVjLjI3NiAwIC41LjIyNC41LjV2MS41aDJ2LTJjMC0xLjEwNC0uODk2LTItMi0yaC02eicvJTNFJTNDL3N2ZyUzRVwiKTtcbiAgICAgICAgICAgICAgd2lkdGg6MTRweDtcbiAgICAgICAgICAgICAgaGVpZ2h0OjE0cHg7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTowLjJyZW07XG4gICAgICAgIH1cbiAgICAgICAgLmF3c20tam9iLXNwZWNpZmljYXRpb24tam9iLWxvY2F0aW9uIHtcbiAgICAgICAgICAuYXdzbS1qb2Itc3BlY2lmaWNhdGlvbi10ZXJte1xuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzE0JyBoZWlnaHQ9JzE0JyB2aWV3Qm94PScwIDAgMjQgMjQnJTNFJTNDcGF0aCBkPSdNMTIgMGMtNC4xOTggMC04IDMuNDAzLTggNy42MDIgMCA0LjE5OCAzLjQ2OSA5LjIxIDggMTYuMzk4IDQuNTMxLTcuMTg4IDgtMTIuMiA4LTE2LjM5OCAwLTQuMTk5LTMuODAxLTcuNjAyLTgtNy42MDJ6bTAgMTRjLTMuMzE0IDAtNi0yLjY4Ni02LTZzMi42ODYtNiA2LTYgNiAyLjY4NiA2IDYtMi42ODYgNi02IDZ6Jy8lM0UlM0Mvc3ZnJTNFXCIpO1xuICAgICAgICAgICAgICB3aWR0aDoxNHB4O1xuICAgICAgICAgICAgICBoZWlnaHQ6MTRweDtcbiAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgNXB4IDIwcHggMCByZ2JhKDAsMCwwLC4yMyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZC5oMWBcbiAgZm9udC1zaXplOiAycmVtO1xuICBtYXJnaW4tYm90dG9tOjEuNXJlbTtcbiAgY29sb3I6IHZhcigtLWJsYWNrKTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuYDtcblxuY29uc3QgQXV0aG9yTmFtZSA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICBmb250LXNpemU6IDFyZW07XG4gIG1hcmdpbi1yaWdodDoxcmVtO1xuYDtcblxuY29uc3QgU3R5bGVkTGluayA9IHN0eWxlZChMaW5rKWBcbiAgcGFkZGluZzogMTVweCAwO1xuYDtcblxuY29uc3QgUHVibGlzaERhdGUgPSBzdHlsZWQuc3BhbmBcbiAgY29sb3I6IHZhcigtLWdyYXkpO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuYDtcblxuY29uc3QgRXhjZXJwdCA9IHN0eWxlZC5kaXZgXG4gIGxpbmUtaGVpZ2h0OiAxLjZlbTtcbmA7XG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Title=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h1\",{target:\"e18hzt7j1\",label:\"Title\"})( false?undefined:{name:\"gqr3wm\",styles:\"font-size:2rem;margin-bottom:1.5rem;color:var(--black);box-sizing:border-box;transition:all .3s ease;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var AuthorName=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"span\",{target:\"e18hzt7j2\",label:\"AuthorName\"})( false?undefined:{name:\"14uo7y2\",styles:\"color:var(--black);font-size:1rem;margin-right:1rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var StyledLink=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{target:\"e18hzt7j3\",label:\"StyledLink\"})( false?undefined:{name:\"qar1bk\",styles:\"padding:15px 0;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PublishDate=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"span\",{target:\"e18hzt7j4\",label:\"PublishDate\"})( false?undefined:{name:\"1q80jur\",styles:\"color:var(--gray);font-size:0.875rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Excerpt=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e18hzt7j5\",label:\"Excerpt\"})( false?undefined:{name:\"11gqtoi\",styles:\"line-height:1.6em;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/f1/src/components/list/list-item.js\n");

/***/ }),

/***/ "./packages/f1/src/components/list/list.js":
/*!*************************************************!*\
  !*** ./packages/f1/src/components/list/list.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _list_item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./list-item */ \"./packages/f1/src/components/list/list-item.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pagination */ \"./packages/f1/src/components/list/pagination.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var List=(_ref)=>{var{state}=_ref;// Get the data of the current list.\nvar data=state.source.get(state.router.link);var data2=state.source.get(\"/category/index\");console.log(data2,\"fdasfsd\");var title='Blog';if(data.isAwsmJobOpeningsArchive){title='Career';}return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Container,null,\"fadsfsdfdsfdfsafds\",data.isPostArchive&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Header,null,title),data.isAwsmJobOpeningsArchive&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Header,null,title),data.isTaxonomy&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Header,null,data.taxonomy,\":\",\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"b\",null,Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"decode\"])(state.source[data.taxonomy][data.id].name))),data.isAuthor&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Header,null,\"Author: \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"b\",null,Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"decode\"])(state.source.author[data.id].name))),data.isAwsmJobOpeningsArchive&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"section\",{className:\"section job-listing\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"div\",{className:\"container\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"div\",{className:\"row\"},data.items.map((_ref2)=>{var{type,id}=_ref2;var item=state.source[type][id];// Render one Item component for each one.\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_list_item__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{key:item.id,item:item});})))),!data.isAwsmJobOpeningsArchive&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,data.items.map((_ref3)=>{var{type,id}=_ref3;var item=state.source[type][id];// Render one Item component for each one.\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_list_item__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{key:item.id,item:item});})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_pagination__WEBPACK_IMPORTED_MODULE_4__[\"default\"],null));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(List));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"section\",{target:\"epohgmq0\",label:\"Container\"})( false?undefined:{name:\"1gke78x\",styles:\"width:1200px;margin:0 auto;padding-right:15px;padding-left:15px;list-style:none;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXZvbm1jZ2lsYmVycnkvRG9jdW1lbnRzL2dlbi1tb2NrLXYyL2dlbmVyYXRpb24tbW9jay9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L2xpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkVnQyIsImZpbGUiOiIvVXNlcnMvamF2b25tY2dpbGJlcnJ5L0RvY3VtZW50cy9nZW4tbW9jay12Mi9nZW5lcmF0aW9uLW1vY2svcGFja2FnZXMvZjEvc3JjL2NvbXBvbmVudHMvbGlzdC9saXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkLCBkZWNvZGUgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBJdGVtIGZyb20gXCIuL2xpc3QtaXRlbVwiO1xuaW1wb3J0IFBhZ2luYXRpb24gZnJvbSBcIi4vcGFnaW5hdGlvblwiO1xuXG5jb25zdCBMaXN0ID0gKHsgc3RhdGUgfSkgPT4ge1xuICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGN1cnJlbnQgbGlzdC5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICBjb25zdCBkYXRhMiA9IHN0YXRlLnNvdXJjZS5nZXQoXCIvY2F0ZWdvcnkvaW5kZXhcIik7XG4gIGNvbnNvbGUubG9nKGRhdGEyLCBcImZkYXNmc2RcIik7XG4gIGxldCB0aXRsZSA9ICdCbG9nJztcbiAgaWYgKCBkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSApIHtcbiAgICB0aXRsZSA9ICdDYXJlZXInO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyPlxuICAgICAgZmFkc2ZzZGZkc2ZkZnNhZmRzXG4gICAgICB7LyogSWYgdGhlIGxpc3QgaXMgYSBibG9nIHBvc3RzLCB3ZSByZW5kZXIgYSB0aXRsZS4gKi99XG4gICAgICB7ZGF0YS5pc1Bvc3RBcmNoaXZlICYmIChcbiAgICAgICAgPEhlYWRlcj5cbiAgICAgICAgICB7dGl0bGV9XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cbiAgICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgQVdTTSBKb2IgY2FyZWVyIHBhZ2UsIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG4gICAgICB7LyogSWYgdGhlIGxpc3QgaXMgYSB0YXhvbm9teSwgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNUYXhvbm9teSAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAge2RhdGEudGF4b25vbXl9OntcIiBcIn1cbiAgICAgICAgICA8Yj57ZGVjb2RlKHN0YXRlLnNvdXJjZVtkYXRhLnRheG9ub215XVtkYXRhLmlkXS5uYW1lKX08L2I+XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cblxuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGZvciBhIHNwZWNpZmljIGF1dGhvciwgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNBdXRob3IgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIEF1dGhvcjogPGI+e2RlY29kZShzdGF0ZS5zb3VyY2UuYXV0aG9yW2RhdGEuaWRdLm5hbWUpfTwvYj5cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICApfVxuICAgIFxuICAgICAgey8qIEl0ZXJhdGUgb3ZlciB0aGUgaXRlbXMgb2YgdGhlIGxpc3QuICovfVxuICAgICAge2RhdGEuaXNBd3NtSm9iT3BlbmluZ3NBcmNoaXZlICYmIChcbiAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJzZWN0aW9uIGpvYi1saXN0aW5nXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgICB7LyogSXRlcmF0ZSBvdmVyIHRoZSBpdGVtcyBvZiB0aGUgbGlzdC4gKi99XG4gICAgICAgICAgICAgIHtkYXRhLml0ZW1zLm1hcCgoeyB0eXBlLCBpZCB9KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICAgICAgICAgICAgLy8gUmVuZGVyIG9uZSBJdGVtIGNvbXBvbmVudCBmb3IgZWFjaCBvbmUuXG4gICAgICAgICAgICAgICAgcmV0dXJuIDxJdGVtIGtleT17aXRlbS5pZH0gaXRlbT17aXRlbX0gLz47XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICApfVxuICAgICAgeyFkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSAmJiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICB7ZGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQgfSkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBpdGVtID0gc3RhdGUuc291cmNlW3R5cGVdW2lkXTtcbiAgICAgICAgICAgICAgLy8gUmVuZGVyIG9uZSBJdGVtIGNvbXBvbmVudCBmb3IgZWFjaCBvbmUuXG4gICAgICAgICAgICAgIHJldHVybiA8SXRlbSBrZXk9e2l0ZW0uaWR9IGl0ZW09e2l0ZW19IC8+O1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC8+XG4gICAgICApfVxuICAgICAgXG4gICAgICA8UGFnaW5hdGlvbiAvPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChMaXN0KTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLnNlY3Rpb25gXG4gIHdpZHRoOiAxMjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG5gO1xuXG5jb25zdCBIZWFkZXIgPSBzdHlsZWQuaDFgXG4gIHRleHQtYWxpZ246Y2VudGVyO1xuICBtYXJnaW4tYm90dG9tOjNyZW07XG5cbmA7XG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Header=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h1\",{target:\"epohgmq1\",label:\"Header\"})( false?undefined:{name:\"fe1m43\",styles:\"text-align:center;margin-bottom:3rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXZvbm1jZ2lsYmVycnkvRG9jdW1lbnRzL2dlbi1tb2NrLXYyL2dlbmVyYXRpb24tbW9jay9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L2xpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUZ3QiIsImZpbGUiOiIvVXNlcnMvamF2b25tY2dpbGJlcnJ5L0RvY3VtZW50cy9nZW4tbW9jay12Mi9nZW5lcmF0aW9uLW1vY2svcGFja2FnZXMvZjEvc3JjL2NvbXBvbmVudHMvbGlzdC9saXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkLCBkZWNvZGUgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBJdGVtIGZyb20gXCIuL2xpc3QtaXRlbVwiO1xuaW1wb3J0IFBhZ2luYXRpb24gZnJvbSBcIi4vcGFnaW5hdGlvblwiO1xuXG5jb25zdCBMaXN0ID0gKHsgc3RhdGUgfSkgPT4ge1xuICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGN1cnJlbnQgbGlzdC5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICBjb25zdCBkYXRhMiA9IHN0YXRlLnNvdXJjZS5nZXQoXCIvY2F0ZWdvcnkvaW5kZXhcIik7XG4gIGNvbnNvbGUubG9nKGRhdGEyLCBcImZkYXNmc2RcIik7XG4gIGxldCB0aXRsZSA9ICdCbG9nJztcbiAgaWYgKCBkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSApIHtcbiAgICB0aXRsZSA9ICdDYXJlZXInO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyPlxuICAgICAgZmFkc2ZzZGZkc2ZkZnNhZmRzXG4gICAgICB7LyogSWYgdGhlIGxpc3QgaXMgYSBibG9nIHBvc3RzLCB3ZSByZW5kZXIgYSB0aXRsZS4gKi99XG4gICAgICB7ZGF0YS5pc1Bvc3RBcmNoaXZlICYmIChcbiAgICAgICAgPEhlYWRlcj5cbiAgICAgICAgICB7dGl0bGV9XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cbiAgICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgQVdTTSBKb2IgY2FyZWVyIHBhZ2UsIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG4gICAgICB7LyogSWYgdGhlIGxpc3QgaXMgYSB0YXhvbm9teSwgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNUYXhvbm9teSAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAge2RhdGEudGF4b25vbXl9OntcIiBcIn1cbiAgICAgICAgICA8Yj57ZGVjb2RlKHN0YXRlLnNvdXJjZVtkYXRhLnRheG9ub215XVtkYXRhLmlkXS5uYW1lKX08L2I+XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cblxuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGZvciBhIHNwZWNpZmljIGF1dGhvciwgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNBdXRob3IgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIEF1dGhvcjogPGI+e2RlY29kZShzdGF0ZS5zb3VyY2UuYXV0aG9yW2RhdGEuaWRdLm5hbWUpfTwvYj5cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICApfVxuICAgIFxuICAgICAgey8qIEl0ZXJhdGUgb3ZlciB0aGUgaXRlbXMgb2YgdGhlIGxpc3QuICovfVxuICAgICAge2RhdGEuaXNBd3NtSm9iT3BlbmluZ3NBcmNoaXZlICYmIChcbiAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJzZWN0aW9uIGpvYi1saXN0aW5nXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgICB7LyogSXRlcmF0ZSBvdmVyIHRoZSBpdGVtcyBvZiB0aGUgbGlzdC4gKi99XG4gICAgICAgICAgICAgIHtkYXRhLml0ZW1zLm1hcCgoeyB0eXBlLCBpZCB9KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICAgICAgICAgICAgLy8gUmVuZGVyIG9uZSBJdGVtIGNvbXBvbmVudCBmb3IgZWFjaCBvbmUuXG4gICAgICAgICAgICAgICAgcmV0dXJuIDxJdGVtIGtleT17aXRlbS5pZH0gaXRlbT17aXRlbX0gLz47XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICApfVxuICAgICAgeyFkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSAmJiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICB7ZGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQgfSkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBpdGVtID0gc3RhdGUuc291cmNlW3R5cGVdW2lkXTtcbiAgICAgICAgICAgICAgLy8gUmVuZGVyIG9uZSBJdGVtIGNvbXBvbmVudCBmb3IgZWFjaCBvbmUuXG4gICAgICAgICAgICAgIHJldHVybiA8SXRlbSBrZXk9e2l0ZW0uaWR9IGl0ZW09e2l0ZW19IC8+O1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC8+XG4gICAgICApfVxuICAgICAgXG4gICAgICA8UGFnaW5hdGlvbiAvPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChMaXN0KTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLnNlY3Rpb25gXG4gIHdpZHRoOiAxMjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG5gO1xuXG5jb25zdCBIZWFkZXIgPSBzdHlsZWQuaDFgXG4gIHRleHQtYWxpZ246Y2VudGVyO1xuICBtYXJnaW4tYm90dG9tOjNyZW07XG5cbmA7XG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L2xpc3QuanM/NmRiYiJdLCJuYW1lcyI6WyJMaXN0Iiwic3RhdGUiLCJkYXRhIiwic291cmNlIiwiZ2V0Iiwicm91dGVyIiwibGluayIsImRhdGEyIiwiY29uc29sZSIsImxvZyIsInRpdGxlIiwiaXNBd3NtSm9iT3BlbmluZ3NBcmNoaXZlIiwiaXNQb3N0QXJjaGl2ZSIsImlzVGF4b25vbXkiLCJ0YXhvbm9teSIsImRlY29kZSIsImlkIiwibmFtZSIsImlzQXV0aG9yIiwiYXV0aG9yIiwiaXRlbXMiLCJtYXAiLCJ0eXBlIiwiaXRlbSIsImNvbm5lY3QiLCJDb250YWluZXIiLCJIZWFkZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztxUkFLQSxHQUFNQSxLQUFJLENBQUcsUUFBZSxJQUFkLENBQUVDLEtBQUYsQ0FBYyxNQUMxQjtBQUNBLEdBQU1DLEtBQUksQ0FBR0QsS0FBSyxDQUFDRSxNQUFOLENBQWFDLEdBQWIsQ0FBaUJILEtBQUssQ0FBQ0ksTUFBTixDQUFhQyxJQUE5QixDQUFiLENBQ0EsR0FBTUMsTUFBSyxDQUFHTixLQUFLLENBQUNFLE1BQU4sQ0FBYUMsR0FBYixDQUFpQixpQkFBakIsQ0FBZCxDQUNBSSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsS0FBWixDQUFtQixTQUFuQixFQUNBLEdBQUlHLE1BQUssQ0FBRyxNQUFaLENBQ0EsR0FBS1IsSUFBSSxDQUFDUyx3QkFBVixDQUFxQyxDQUNuQ0QsS0FBSyxDQUFHLFFBQVIsQ0FDRCxDQUVELE1BQ0UsMkRBQUMsU0FBRCwyQkFHR1IsSUFBSSxDQUFDVSxhQUFMLEVBQ0MsMERBQUMsTUFBRCxNQUNHRixLQURILENBSkosQ0FTR1IsSUFBSSxDQUFDUyx3QkFBTCxFQUNDLDBEQUFDLE1BQUQsTUFDR0QsS0FESCxDQVZKLENBZUdSLElBQUksQ0FBQ1csVUFBTCxFQUNDLDBEQUFDLE1BQUQsTUFDR1gsSUFBSSxDQUFDWSxRQURSLEtBQ21CLEdBRG5CLENBRUUsbUVBQUlDLHVEQUFNLENBQUNkLEtBQUssQ0FBQ0UsTUFBTixDQUFhRCxJQUFJLENBQUNZLFFBQWxCLEVBQTRCWixJQUFJLENBQUNjLEVBQWpDLEVBQXFDQyxJQUF0QyxDQUFWLENBRkYsQ0FoQkosQ0F1QkdmLElBQUksQ0FBQ2dCLFFBQUwsRUFDQywwREFBQyxNQUFELGlCQUNVLG1FQUFJSCx1REFBTSxDQUFDZCxLQUFLLENBQUNFLE1BQU4sQ0FBYWdCLE1BQWIsQ0FBb0JqQixJQUFJLENBQUNjLEVBQXpCLEVBQTZCQyxJQUE5QixDQUFWLENBRFYsQ0F4QkosQ0E4QkdmLElBQUksQ0FBQ1Msd0JBQUwsRUFDRyxxRUFBUyxTQUFTLENBQUMscUJBQW5CLEVBQ0UsaUVBQUssU0FBUyxDQUFDLFdBQWYsRUFDRSxpRUFBSyxTQUFTLENBQUMsS0FBZixFQUVDVCxJQUFJLENBQUNrQixLQUFMLENBQVdDLEdBQVgsQ0FBZSxTQUFrQixJQUFqQixDQUFFQyxJQUFGLENBQVFOLEVBQVIsQ0FBaUIsT0FDaEMsR0FBTU8sS0FBSSxDQUFHdEIsS0FBSyxDQUFDRSxNQUFOLENBQWFtQixJQUFiLEVBQW1CTixFQUFuQixDQUFiLENBQ0E7QUFDQSxNQUFPLDJEQUFDLGtEQUFELEVBQU0sR0FBRyxDQUFFTyxJQUFJLENBQUNQLEVBQWhCLENBQW9CLElBQUksQ0FBRU8sSUFBMUIsRUFBUCxDQUNELENBSkEsQ0FGRCxDQURGLENBREYsQ0EvQk4sQ0E0Q0csQ0FBQ3JCLElBQUksQ0FBQ1Msd0JBQU4sRUFDRyxxSEFDQ1QsSUFBSSxDQUFDa0IsS0FBTCxDQUFXQyxHQUFYLENBQWUsU0FBa0IsSUFBakIsQ0FBRUMsSUFBRixDQUFRTixFQUFSLENBQWlCLE9BQzlCLEdBQU1PLEtBQUksQ0FBR3RCLEtBQUssQ0FBQ0UsTUFBTixDQUFhbUIsSUFBYixFQUFtQk4sRUFBbkIsQ0FBYixDQUNBO0FBQ0EsTUFBTywyREFBQyxrREFBRCxFQUFNLEdBQUcsQ0FBRU8sSUFBSSxDQUFDUCxFQUFoQixDQUFvQixJQUFJLENBQUVPLElBQTFCLEVBQVAsQ0FDRCxDQUpGLENBREQsQ0E3Q04sQ0FzREUsMERBQUMsbURBQUQsTUF0REYsQ0FERixDQTBERCxDQXBFRCxDQXNFZUMsdUhBQU8sQ0FBQ3hCLElBQUQsQ0FBdEIsRUFFQSxHQUFNeUIsVUFBUywybElBQWYsQ0FRQSxHQUFNQyxPQUFNLHVpSUFBWiIsImZpbGUiOiIuL3BhY2thZ2VzL2YxL3NyYy9jb21wb25lbnRzL2xpc3QvbGlzdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgZGVjb2RlIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgSXRlbSBmcm9tIFwiLi9saXN0LWl0ZW1cIjtcbmltcG9ydCBQYWdpbmF0aW9uIGZyb20gXCIuL3BhZ2luYXRpb25cIjtcblxuY29uc3QgTGlzdCA9ICh7IHN0YXRlIH0pID0+IHtcbiAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBjdXJyZW50IGxpc3QuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgY29uc3QgZGF0YTIgPSBzdGF0ZS5zb3VyY2UuZ2V0KFwiL2NhdGVnb3J5L2luZGV4XCIpO1xuICBjb25zb2xlLmxvZyhkYXRhMiwgXCJmZGFzZnNkXCIpO1xuICBsZXQgdGl0bGUgPSAnQmxvZyc7XG4gIGlmICggZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgKSB7XG4gICAgdGl0bGUgPSAnQ2FyZWVyJztcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lcj5cbiAgICAgIGZhZHNmc2RmZHNmZGZzYWZkc1xuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgYmxvZyBwb3N0cywgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNQb3N0QXJjaGl2ZSAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG4gICAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBhIEFXU00gSm9iIGNhcmVlciBwYWdlLCB3ZSByZW5kZXIgYSB0aXRsZS4gKi99XG4gICAgICB7ZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICApfVxuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgdGF4b25vbXksIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzVGF4b25vbXkgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIHtkYXRhLnRheG9ub215fTp7XCIgXCJ9XG4gICAgICAgICAgPGI+e2RlY29kZShzdGF0ZS5zb3VyY2VbZGF0YS50YXhvbm9teV1bZGF0YS5pZF0ubmFtZSl9PC9iPlxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBmb3IgYSBzcGVjaWZpYyBhdXRob3IsIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzQXV0aG9yICYmIChcbiAgICAgICAgPEhlYWRlcj5cbiAgICAgICAgICBBdXRob3I6IDxiPntkZWNvZGUoc3RhdGUuc291cmNlLmF1dGhvcltkYXRhLmlkXS5uYW1lKX08L2I+XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cbiAgICBcbiAgICAgIHsvKiBJdGVyYXRlIG92ZXIgdGhlIGl0ZW1zIG9mIHRoZSBsaXN0LiAqL31cbiAgICAgIHtkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSAmJiAoXG4gICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwic2VjdGlvbiBqb2ItbGlzdGluZ1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgey8qIEl0ZXJhdGUgb3ZlciB0aGUgaXRlbXMgb2YgdGhlIGxpc3QuICovfVxuICAgICAgICAgICAgICB7ZGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgICAgICAgICAgIC8vIFJlbmRlciBvbmUgSXRlbSBjb21wb25lbnQgZm9yIGVhY2ggb25lLlxuICAgICAgICAgICAgICAgIHJldHVybiA8SXRlbSBrZXk9e2l0ZW0uaWR9IGl0ZW09e2l0ZW19IC8+O1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgKX1cbiAgICAgIHshZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgJiYgKFxuICAgICAgICAgIDw+XG4gICAgICAgICAge2RhdGEuaXRlbXMubWFwKCh7IHR5cGUsIGlkIH0pID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICAgICAgICAgIC8vIFJlbmRlciBvbmUgSXRlbSBjb21wb25lbnQgZm9yIGVhY2ggb25lLlxuICAgICAgICAgICAgICByZXR1cm4gPEl0ZW0ga2V5PXtpdGVtLmlkfSBpdGVtPXtpdGVtfSAvPjtcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvPlxuICAgICAgKX1cbiAgICAgIFxuICAgICAgPFBhZ2luYXRpb24gLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTGlzdCk7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5zZWN0aW9uYFxuICB3aWR0aDogMTIwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuYDtcblxuY29uc3QgSGVhZGVyID0gc3R5bGVkLmgxYFxuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTozcmVtO1xuXG5gO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/f1/src/components/list/list.js\n");

/***/ }),

/***/ "./packages/f1/src/components/list/pagination.js":
/*!*******************************************************!*\
  !*** ./packages/f1/src/components/list/pagination.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Pagination Component\n *\n * It's used to allow the user to paginate between a list of posts.\n *\n * The `state`, `actions`, `libraries` props are provided by the global context,\n * when we wrap this component in `connect(...)`\n */var Pagination=(_ref)=>{var{state,actions}=_ref;// Get the total posts to be displayed based for the current link\nvar{next,previous}=state.source.get(state.router.link);// Pre-fetch the the next page if it hasn't been fetched yet.\nObject(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(()=>{if(next)actions.source.fetch(next);},[]);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",null,next&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{link:next},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Text,null,\"\\u2190 Older posts\")),previous&&next&&\" - \",previous&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{link:previous},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Text,null,\"Newer posts \\u2192\")));};/**\n * Connect Pagination to global context to give it access to\n * `state`, `actions`, `libraries` via props\n *//* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Pagination));var Text=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"em\",{target:\"enqjely0\",label:\"Text\"})( false?undefined:{name:\"xhf1f8\",styles:\"display:inline-block;margin-top:16px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXZvbm1jZ2lsYmVycnkvRG9jdW1lbnRzL2dlbi1tb2NrLXYyL2dlbmVyYXRpb24tbW9jay9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L3BhZ2luYXRpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0RzQiIsImZpbGUiOiIvVXNlcnMvamF2b25tY2dpbGJlcnJ5L0RvY3VtZW50cy9nZW4tbW9jay12Mi9nZW5lcmF0aW9uLW1vY2svcGFja2FnZXMvZjEvc3JjL2NvbXBvbmVudHMvbGlzdC9wYWdpbmF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiO1xuXG4vKipcbiAqIFBhZ2luYXRpb24gQ29tcG9uZW50XG4gKlxuICogSXQncyB1c2VkIHRvIGFsbG93IHRoZSB1c2VyIHRvIHBhZ2luYXRlIGJldHdlZW4gYSBsaXN0IG9mIHBvc3RzLlxuICpcbiAqIFRoZSBgc3RhdGVgLCBgYWN0aW9uc2AsIGBsaWJyYXJpZXNgIHByb3BzIGFyZSBwcm92aWRlZCBieSB0aGUgZ2xvYmFsIGNvbnRleHQsXG4gKiB3aGVuIHdlIHdyYXAgdGhpcyBjb21wb25lbnQgaW4gYGNvbm5lY3QoLi4uKWBcbiAqL1xuY29uc3QgUGFnaW5hdGlvbiA9ICh7IHN0YXRlLCBhY3Rpb25zIH0pID0+IHtcbiAgLy8gR2V0IHRoZSB0b3RhbCBwb3N0cyB0byBiZSBkaXNwbGF5ZWQgYmFzZWQgZm9yIHRoZSBjdXJyZW50IGxpbmtcbiAgY29uc3QgeyBuZXh0LCBwcmV2aW91cyB9ID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG5cbiAgLy8gUHJlLWZldGNoIHRoZSB0aGUgbmV4dCBwYWdlIGlmIGl0IGhhc24ndCBiZWVuIGZldGNoZWQgeWV0LlxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChuZXh0KSBhY3Rpb25zLnNvdXJjZS5mZXRjaChuZXh0KTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIHsvKiBJZiB0aGVyZSdzIGEgbmV4dCBwYWdlLCByZW5kZXIgdGhpcyBsaW5rICovfVxuICAgICAge25leHQgJiYgKFxuICAgICAgICA8TGluayBsaW5rPXtuZXh0fT5cbiAgICAgICAgICA8VGV4dD7ihpAgT2xkZXIgcG9zdHM8L1RleHQ+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICl9XG5cbiAgICAgIHtwcmV2aW91cyAmJiBuZXh0ICYmIFwiIC0gXCJ9XG5cbiAgICAgIHsvKiBJZiB0aGVyZSdzIGEgcHJldmlvdXMgcGFnZSwgcmVuZGVyIHRoaXMgbGluayAqL31cbiAgICAgIHtwcmV2aW91cyAmJiAoXG4gICAgICAgIDxMaW5rIGxpbms9e3ByZXZpb3VzfT5cbiAgICAgICAgICA8VGV4dD5OZXdlciBwb3N0cyDihpI8L1RleHQ+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG4vKipcbiAqIENvbm5lY3QgUGFnaW5hdGlvbiB0byBnbG9iYWwgY29udGV4dCB0byBnaXZlIGl0IGFjY2VzcyB0b1xuICogYHN0YXRlYCwgYGFjdGlvbnNgLCBgbGlicmFyaWVzYCB2aWEgcHJvcHNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQYWdpbmF0aW9uKTtcblxuY29uc3QgVGV4dCA9IHN0eWxlZC5lbWBcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAxNnB4O1xuYDtcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L3BhZ2luYXRpb24uanM/ZTFlZCJdLCJuYW1lcyI6WyJQYWdpbmF0aW9uIiwic3RhdGUiLCJhY3Rpb25zIiwibmV4dCIsInByZXZpb3VzIiwic291cmNlIiwiZ2V0Iiwicm91dGVyIiwibGluayIsInVzZUVmZmVjdCIsImZldGNoIiwiY29ubmVjdCIsIlRleHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O3FSQUlBOzs7Ozs7O0dBUUEsR0FBTUEsV0FBVSxDQUFHLFFBQXdCLElBQXZCLENBQUVDLEtBQUYsQ0FBU0MsT0FBVCxDQUF1QixNQUN6QztBQUNBLEdBQU0sQ0FBRUMsSUFBRixDQUFRQyxRQUFSLEVBQXFCSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUMsR0FBYixDQUFpQkwsS0FBSyxDQUFDTSxNQUFOLENBQWFDLElBQTlCLENBQTNCLENBRUE7QUFDQUMsdURBQVMsQ0FBQyxJQUFNLENBQ2QsR0FBSU4sSUFBSixDQUFVRCxPQUFPLENBQUNHLE1BQVIsQ0FBZUssS0FBZixDQUFxQlAsSUFBckIsRUFDWCxDQUZRLENBRU4sRUFGTSxDQUFULENBSUEsTUFDRSxzRUFFR0EsSUFBSSxFQUNILDBEQUFDLGlFQUFELEVBQU0sSUFBSSxDQUFFQSxJQUFaLEVBQ0UsMERBQUMsSUFBRCwyQkFERixDQUhKLENBUUdDLFFBQVEsRUFBSUQsSUFBWixFQUFvQixLQVJ2QixDQVdHQyxRQUFRLEVBQ1AsMERBQUMsaUVBQUQsRUFBTSxJQUFJLENBQUVBLFFBQVosRUFDRSwwREFBQyxJQUFELDJCQURGLENBWkosQ0FERixDQW1CRCxDQTVCRCxDQThCQTs7O0dBSWVPLHVIQUFPLENBQUNYLFVBQUQsQ0FBdEIsRUFFQSxHQUFNWSxLQUFJLDYvRUFBViIsImZpbGUiOiIuL3BhY2thZ2VzL2YxL3NyYy9jb21wb25lbnRzL2xpc3QvcGFnaW5hdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2xpbmtcIjtcblxuLyoqXG4gKiBQYWdpbmF0aW9uIENvbXBvbmVudFxuICpcbiAqIEl0J3MgdXNlZCB0byBhbGxvdyB0aGUgdXNlciB0byBwYWdpbmF0ZSBiZXR3ZWVuIGEgbGlzdCBvZiBwb3N0cy5cbiAqXG4gKiBUaGUgYHN0YXRlYCwgYGFjdGlvbnNgLCBgbGlicmFyaWVzYCBwcm9wcyBhcmUgcHJvdmlkZWQgYnkgdGhlIGdsb2JhbCBjb250ZXh0LFxuICogd2hlbiB3ZSB3cmFwIHRoaXMgY29tcG9uZW50IGluIGBjb25uZWN0KC4uLilgXG4gKi9cbmNvbnN0IFBhZ2luYXRpb24gPSAoeyBzdGF0ZSwgYWN0aW9ucyB9KSA9PiB7XG4gIC8vIEdldCB0aGUgdG90YWwgcG9zdHMgdG8gYmUgZGlzcGxheWVkIGJhc2VkIGZvciB0aGUgY3VycmVudCBsaW5rXG4gIGNvbnN0IHsgbmV4dCwgcHJldmlvdXMgfSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuXG4gIC8vIFByZS1mZXRjaCB0aGUgdGhlIG5leHQgcGFnZSBpZiBpdCBoYXNuJ3QgYmVlbiBmZXRjaGVkIHlldC5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAobmV4dCkgYWN0aW9ucy5zb3VyY2UuZmV0Y2gobmV4dCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICB7LyogSWYgdGhlcmUncyBhIG5leHQgcGFnZSwgcmVuZGVyIHRoaXMgbGluayAqL31cbiAgICAgIHtuZXh0ICYmIChcbiAgICAgICAgPExpbmsgbGluaz17bmV4dH0+XG4gICAgICAgICAgPFRleHQ+4oaQIE9sZGVyIHBvc3RzPC9UZXh0PlxuICAgICAgICA8L0xpbms+XG4gICAgICApfVxuXG4gICAgICB7cHJldmlvdXMgJiYgbmV4dCAmJiBcIiAtIFwifVxuXG4gICAgICB7LyogSWYgdGhlcmUncyBhIHByZXZpb3VzIHBhZ2UsIHJlbmRlciB0aGlzIGxpbmsgKi99XG4gICAgICB7cHJldmlvdXMgJiYgKFxuICAgICAgICA8TGluayBsaW5rPXtwcmV2aW91c30+XG4gICAgICAgICAgPFRleHQ+TmV3ZXIgcG9zdHMg4oaSPC9UZXh0PlxuICAgICAgICA8L0xpbms+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLyoqXG4gKiBDb25uZWN0IFBhZ2luYXRpb24gdG8gZ2xvYmFsIGNvbnRleHQgdG8gZ2l2ZSBpdCBhY2Nlc3MgdG9cbiAqIGBzdGF0ZWAsIGBhY3Rpb25zYCwgYGxpYnJhcmllc2AgdmlhIHByb3BzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUGFnaW5hdGlvbik7XG5cbmNvbnN0IFRleHQgPSBzdHlsZWQuZW1gXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogMTZweDtcbmA7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/f1/src/components/list/pagination.js\n");

/***/ })

}]);